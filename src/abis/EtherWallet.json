{
  "contractName": "EtherWallet",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/tim/_Dapp_ex/ETB4_EtherWallet/src/contracts/EtherWallet.sol\":\"EtherWallet\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tim/_Dapp_ex/ETB4_EtherWallet/src/contracts/EtherWallet.sol\":{\"keccak256\":\"0x6e7092b559bd6b43533ca700837d441c6f7f690876f769fe6e8f3542036b315e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79056057a0fba5c1e9cfd98b3745b65bcd3114f14739b0e8d189996ba065dd0b\",\"dweb:/ipfs/QmQ5MqnUum4sY9DnpaCzR9Xb6pZqwTuEXzx1rMnnczKS2U\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610722806100606000396000f3fe60806040526004361061004a5760003560e01c806312065fe01461004f5780632e1a7d4d1461007a5780638da5cb5b146100a3578063a9059cbb146100ce578063d0e30db0146100f7575b600080fd5b34801561005b57600080fd5b50610064610101565b60405161007191906105d9565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c91906104ed565b610198565b005b3480156100af57600080fd5b506100b86102b3565b6040516100c5919061057e565b60405180910390f35b3480156100da57600080fd5b506100f560048036038101906100f091906104ad565b6102d7565b005b6100ff6103f3565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018990610599565b60405180910390fd5b47905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90610599565b60405180910390fd5b47811115610269576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610260906105b9565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102af573d6000803e3d6000fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c90610599565b60405180910390fd5b478111156103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906105b9565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103ee573d6000803e3d6000fd5b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890610599565b60405180910390fd5b565b600081359050610492816106be565b92915050565b6000813590506104a7816106d5565b92915050565b600080604083850312156104c4576104c3610641565b5b60006104d285828601610483565b92505060206104e385828601610498565b9150509250929050565b60006020828403121561050357610502610641565b5b600061051184828501610498565b91505092915050565b61052381610605565b82525050565b60006105366016836105f4565b915061054182610646565b602082019050919050565b60006105596026836105f4565b91506105648261066f565b604082019050919050565b61057881610637565b82525050565b6000602082019050610593600083018461051a565b92915050565b600060208201905081810360008301526105b281610529565b9050919050565b600060208201905081810360008301526105d28161054c565b9050919050565b60006020820190506105ee600083018461056f565b92915050565b600082825260208201905092915050565b600061061082610617565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f596f7520617265204e4f5420746865206f776e65722100000000000000000000600082015250565b7f54686520636f6e747261637420444f45534e54206861766520656e6f7567682060008201527f6574686572210000000000000000000000000000000000000000000000000000602082015250565b6106c781610605565b81146106d257600080fd5b50565b6106de81610637565b81146106e957600080fd5b5056fea26469706673582212208a56c4a8d65b3ecf278edb893c87806b7810c8e2bb2759c10d388de73707c82864736f6c63430008060033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c806312065fe01461004f5780632e1a7d4d1461007a5780638da5cb5b146100a3578063a9059cbb146100ce578063d0e30db0146100f7575b600080fd5b34801561005b57600080fd5b50610064610101565b60405161007191906105d9565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c91906104ed565b610198565b005b3480156100af57600080fd5b506100b86102b3565b6040516100c5919061057e565b60405180910390f35b3480156100da57600080fd5b506100f560048036038101906100f091906104ad565b6102d7565b005b6100ff6103f3565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018990610599565b60405180910390fd5b47905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90610599565b60405180910390fd5b47811115610269576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610260906105b9565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102af573d6000803e3d6000fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c90610599565b60405180910390fd5b478111156103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906105b9565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103ee573d6000803e3d6000fd5b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890610599565b60405180910390fd5b565b600081359050610492816106be565b92915050565b6000813590506104a7816106d5565b92915050565b600080604083850312156104c4576104c3610641565b5b60006104d285828601610483565b92505060206104e385828601610498565b9150509250929050565b60006020828403121561050357610502610641565b5b600061051184828501610498565b91505092915050565b61052381610605565b82525050565b60006105366016836105f4565b915061054182610646565b602082019050919050565b60006105596026836105f4565b91506105648261066f565b604082019050919050565b61057881610637565b82525050565b6000602082019050610593600083018461051a565b92915050565b600060208201905081810360008301526105b281610529565b9050919050565b600060208201905081810360008301526105d28161054c565b9050919050565b60006020820190506105ee600083018461056f565b92915050565b600082825260208201905092915050565b600061061082610617565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f596f7520617265204e4f5420746865206f776e65722100000000000000000000600082015250565b7f54686520636f6e747261637420444f45534e54206861766520656e6f7567682060008201527f6574686572210000000000000000000000000000000000000000000000000000602082015250565b6106c781610605565b81146106d257600080fd5b50565b6106de81610637565b81146106e957600080fd5b5056fea26469706673582212208a56c4a8d65b3ecf278edb893c87806b7810c8e2bb2759c10d388de73707c82864736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5003:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:95:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "86:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "150:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "115:34:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "115:41:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "115:41:1"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:1",
                "type": ""
              }
            ],
            "src": "7:155:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "220:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "230:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "252:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "239:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "239:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "230:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "295:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "268:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "268:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "268:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "198:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "206:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "214:5:1",
                "type": ""
              }
            ],
            "src": "168:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "404:399:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "450:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "452:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "452:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "452:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "425:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "434:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "421:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "421:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "446:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "417:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "417:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "414:2:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "543:125:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "558:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "572:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "562:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "587:71:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "630:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "641:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "626:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "626:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "650:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "597:28:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "597:61:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "587:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "678:118:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "693:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "707:2:1",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "697:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "723:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "758:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "769:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "754:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "754:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "778:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "733:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "733:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "723:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payablet_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "366:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "377:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "389:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "397:6:1",
                "type": ""
              }
            ],
            "src": "313:490:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "875:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "921:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "923:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "923:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "923:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "896:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "905:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "892:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "892:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "917:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "888:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "888:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "885:2:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1014:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1029:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1043:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1033:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1058:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1093:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1104:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1089:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1089:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1113:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1068:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1068:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1058:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "845:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "856:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "868:6:1",
                "type": ""
              }
            ],
            "src": "809:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1225:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1242:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1273:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1247:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1247:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1235:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1235:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1235:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1213:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1220:3:1",
                "type": ""
              }
            ],
            "src": "1144:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1438:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1448:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1514:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1519:2:1",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1455:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1455:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1448:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1620:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140",
                      "nodeType": "YulIdentifier",
                      "src": "1531:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1531:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1633:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1644:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1649:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1640:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1633:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1426:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1434:3:1",
                "type": ""
              }
            ],
            "src": "1292:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1810:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1820:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1886:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1891:2:1",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1827:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1827:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1820:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1992:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02",
                      "nodeType": "YulIdentifier",
                      "src": "1903:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1903:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1903:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2005:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2016:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2021:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2012:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2012:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2005:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1798:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1806:3:1",
                "type": ""
              }
            ],
            "src": "1664:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2101:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2118:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2141:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2123:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2123:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2111:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2111:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2089:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2096:3:1",
                "type": ""
              }
            ],
            "src": "2036:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2274:140:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2284:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2296:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2307:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2292:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2292:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2284:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2380:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2393:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2404:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2389:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2389:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2320:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2320:87:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2320:87:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2246:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2258:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2269:4:1",
                "type": ""
              }
            ],
            "src": "2160:254:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2591:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2601:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2613:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2624:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2609:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2609:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2601:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2648:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2659:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2644:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2644:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2667:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2673:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2663:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2663:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2637:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2637:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2637:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2693:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2827:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2701:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2701:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2693:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2571:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2586:4:1",
                "type": ""
              }
            ],
            "src": "2420:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3016:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3026:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3038:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3049:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3034:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3034:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3026:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3073:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3084:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3069:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3069:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3092:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3098:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3088:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3088:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3062:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3062:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3062:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3118:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3252:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3126:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3126:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3118:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2996:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3011:4:1",
                "type": ""
              }
            ],
            "src": "2845:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3368:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3378:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3390:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3401:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3386:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3386:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3378:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3458:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3471:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3482:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3467:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3467:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3414:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3414:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3414:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3340:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3352:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3363:4:1",
                "type": ""
              }
            ],
            "src": "3270:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3538:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3548:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3564:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3558:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3558:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "3548:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3531:6:1",
                "type": ""
              }
            ],
            "src": "3498:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3675:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3692:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3697:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3685:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3685:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3685:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3713:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3732:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3737:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3728:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3728:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3713:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3647:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3652:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3663:11:1",
                "type": ""
              }
            ],
            "src": "3579:169:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3807:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3817:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3846:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3828:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3828:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3817:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3789:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3799:7:1",
                "type": ""
              }
            ],
            "src": "3754:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3909:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3919:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3934:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3941:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3930:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3930:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3919:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3891:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3901:7:1",
                "type": ""
              }
            ],
            "src": "3864:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4041:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4051:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4062:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4051:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4023:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4033:7:1",
                "type": ""
              }
            ],
            "src": "3996:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4168:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4185:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4188:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4178:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4178:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4178:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "4079:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4291:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4308:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4311:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4301:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4301:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4301:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "4202:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4431:66:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4453:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4461:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4449:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4449:14:1"
                      },
                      {
                        "hexValue": "596f7520617265204e4f5420746865206f776e657221",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4465:24:1",
                        "type": "",
                        "value": "You are NOT the owner!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4442:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4442:48:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4442:48:1"
                }
              ]
            },
            "name": "store_literal_in_memory_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4423:6:1",
                "type": ""
              }
            ],
            "src": "4325:172:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4609:119:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4631:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4639:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4627:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4627:14:1"
                      },
                      {
                        "hexValue": "54686520636f6e747261637420444f45534e54206861766520656e6f75676820",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4643:34:1",
                        "type": "",
                        "value": "The contract DOESNT have enough "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4620:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4620:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4620:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4699:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4707:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4695:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4695:15:1"
                      },
                      {
                        "hexValue": "657468657221",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4712:8:1",
                        "type": "",
                        "value": "ether!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4688:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4688:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4688:33:1"
                }
              ]
            },
            "name": "store_literal_in_memory_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4601:6:1",
                "type": ""
              }
            ],
            "src": "4503:225:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4785:87:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4850:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4859:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4862:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4852:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4852:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4852:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4808:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4841:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "4815:25:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4815:32:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4805:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4805:43:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4798:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4798:51:1"
                  },
                  "nodeType": "YulIf",
                  "src": "4795:2:1"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4778:5:1",
                "type": ""
              }
            ],
            "src": "4734:138:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4921:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4978:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4987:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4990:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4980:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4980:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4980:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4944:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4969:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4951:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4951:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4941:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4941:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4934:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4934:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "4931:2:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4914:5:1",
                "type": ""
              }
            ],
            "src": "4878:122:1"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_stringliteral_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are NOT the owner!\")\n\n    }\n\n    function store_literal_in_memory_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02(memPtr) {\n\n        mstore(add(memPtr, 0), \"The contract DOESNT have enough \")\n\n        mstore(add(memPtr, 32), \"ether!\")\n\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "57:1188:0:-:0;;;127:58;;;;;;;;;;167:10;151:5;;:27;;;;;;;;;;;;;;;;;;57:1188;;;;;;",
  "deployedSourceMap": "57:1188:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;705:196;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;88:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1025:213;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;535:51;;;:::i;:::-;;387:104;440:4;245:5;;;;;;;;;;;231:19;;:10;:19;;;223:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;463:21:::1;456:28;;387:104:::0;:::o;705:196::-;245:5;;;;;;;;;;231:19;;:10;:19;;;223:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;783:21:::1;772:7;:32;;764:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;865:10;857:28;;:37;886:7;857:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;705:196:::0;:::o;88:28::-;;;;;;;;;;;;:::o;1025:213::-;245:5;;;;;;;;;;231:19;;:10;:19;;;223:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1130:21:::1;1119:7;:32;;1111:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1204:9;:18;;:27;1223:7;1204:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1025:213:::0;;:::o;535:51::-;245:5;;;;;;;;;;231:19;;:10;:19;;;223:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;535:51::o;7:155:1:-;61:5;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;67:95;;;;:::o;168:139::-;214:5;252:6;239:20;230:29;;268:33;295:5;268:33;:::i;:::-;220:87;;;;:::o;313:490::-;389:6;397;446:2;434:9;425:7;421:23;417:32;414:2;;;452:79;;:::i;:::-;414:2;572:1;597:61;650:7;641:6;630:9;626:22;597:61;:::i;:::-;587:71;;543:125;707:2;733:53;778:7;769:6;758:9;754:22;733:53;:::i;:::-;723:63;;678:118;404:399;;;;;:::o;809:329::-;868:6;917:2;905:9;896:7;892:23;888:32;885:2;;;923:79;;:::i;:::-;885:2;1043:1;1068:53;1113:7;1104:6;1093:9;1089:22;1068:53;:::i;:::-;1058:63;;1014:117;875:263;;;;:::o;1144:142::-;1247:32;1273:5;1247:32;:::i;:::-;1242:3;1235:45;1225:61;;:::o;1292:366::-;1434:3;1455:67;1519:2;1514:3;1455:67;:::i;:::-;1448:74;;1531:93;1620:3;1531:93;:::i;:::-;1649:2;1644:3;1640:12;1633:19;;1438:220;;;:::o;1664:366::-;1806:3;1827:67;1891:2;1886:3;1827:67;:::i;:::-;1820:74;;1903:93;1992:3;1903:93;:::i;:::-;2021:2;2016:3;2012:12;2005:19;;1810:220;;;:::o;2036:118::-;2123:24;2141:5;2123:24;:::i;:::-;2118:3;2111:37;2101:53;;:::o;2160:254::-;2269:4;2307:2;2296:9;2292:18;2284:26;;2320:87;2404:1;2393:9;2389:17;2380:6;2320:87;:::i;:::-;2274:140;;;;:::o;2420:419::-;2586:4;2624:2;2613:9;2609:18;2601:26;;2673:9;2667:4;2663:20;2659:1;2648:9;2644:17;2637:47;2701:131;2827:4;2701:131;:::i;:::-;2693:139;;2591:248;;;:::o;2845:419::-;3011:4;3049:2;3038:9;3034:18;3026:26;;3098:9;3092:4;3088:20;3084:1;3073:9;3069:17;3062:47;3126:131;3252:4;3126:131;:::i;:::-;3118:139;;3016:248;;;:::o;3270:222::-;3363:4;3401:2;3390:9;3386:18;3378:26;;3414:71;3482:1;3471:9;3467:17;3458:6;3414:71;:::i;:::-;3368:124;;;;:::o;3579:169::-;3663:11;3697:6;3692:3;3685:19;3737:4;3732:3;3728:14;3713:29;;3675:73;;;;:::o;3754:104::-;3799:7;3828:24;3846:5;3828:24;:::i;:::-;3817:35;;3807:51;;;:::o;3864:126::-;3901:7;3941:42;3934:5;3930:54;3919:65;;3909:81;;;:::o;3996:77::-;4033:7;4062:5;4051:16;;4041:32;;;:::o;4202:117::-;4311:1;4308;4301:12;4325:172;4465:24;4461:1;4453:6;4449:14;4442:48;4431:66;:::o;4503:225::-;4643:34;4639:1;4631:6;4627:14;4620:58;4712:8;4707:2;4699:6;4695:15;4688:33;4609:119;:::o;4734:138::-;4815:32;4841:5;4815:32;:::i;:::-;4808:5;4805:43;4795:2;;4862:1;4859;4852:12;4795:2;4785:87;:::o;4878:122::-;4951:24;4969:5;4951:24;:::i;:::-;4944:5;4941:35;4931:2;;4990:1;4987;4980:12;4931:2;4921:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract EtherWallet{\n    \n    address payable public owner;\n    \n    constructor() {\n        owner = payable(msg.sender);\n    }\n    \n    modifier onlyOwner{\n        require(msg.sender == owner, 'You are NOT the owner!');\n        _;\n    }\n    \n    // This returns the CONTRACTS's ether balance, NOT this USER's ether balance!\n    function getBalance() public view onlyOwner returns (uint) {\n        return address(this).balance;\n    }\n    \n    // no need to type anything! \n    function deposit() public payable onlyOwner {\n    }\n    \n    // Remember to type in \"10**18\" to withdraw 1 ether.\n    // Transfer ether FROM smart contract TO owner.\n    function withdraw(uint _amount) public onlyOwner {\n        require(_amount <= address(this).balance, 'The contract DOESNT have enough ether!');\n        payable(msg.sender).transfer(_amount);\n    }\n    \n    // Remember to type in \"10**18\" to transfer 1 ether.\n    // Transfer ether FROM smart contract TO a receiver.\n    function transfer(address payable _receiver, uint _amount) public onlyOwner {\n        require(_amount <= address(this).balance, 'The contract DOESNT have enough ether!');\n        _receiver.transfer(_amount);\n    }\n    \n}\n\n\n//   10**18 = 1000000000000000000\n\n// Wrong example:\n// This will transfer ether FROM owner, NOT from smart contract, to _receiver.\n// When using 'msg.sender', it means ether will be drawn from msg.sender, not the smart contract.\n    // function transfer(address payable _receiver) public payable onlyOwner {\n    //     _receiver.transfer(msg.value);\n    // }",
  "sourcePath": "/Users/tim/_Dapp_ex/ETB4_EtherWallet/src/contracts/EtherWallet.sol",
  "ast": {
    "absolutePath": "/Users/tim/_Dapp_ex/ETB4_EtherWallet/src/contracts/EtherWallet.sol",
    "exportedSymbols": {
      "EtherWallet": [
        103
      ]
    },
    "id": 104,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 103,
        "linearizedBaseContracts": [
          103
        ],
        "name": "EtherWallet",
        "nameLocation": "66:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "111:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 103,
            "src": "88:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "88:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14,
              "nodeType": "Block",
              "src": "141:44:0",
              "statements": [
                {
                  "expression": {
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "151:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 9,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "167:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "167:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "159:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "159:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "159:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "151:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 13,
                  "nodeType": "ExpressionStatement",
                  "src": "151:27:0"
                }
              ]
            },
            "id": 15,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "138:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "141:0:0"
            },
            "scope": 103,
            "src": "127:58:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "213:82:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "231:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "231:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 20,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "245:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "231:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265204e4f5420746865206f776e657221",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "252:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140",
                          "typeString": "literal_string \"You are NOT the owner!\""
                        },
                        "value": "You are NOT the owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140",
                          "typeString": "literal_string \"You are NOT the owner!\""
                        }
                      ],
                      "id": 17,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "223:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "223:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "223:54:0"
                },
                {
                  "id": 25,
                  "nodeType": "PlaceholderStatement",
                  "src": "287:1:0"
                }
              ]
            },
            "id": 27,
            "name": "onlyOwner",
            "nameLocation": "204:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:0"
            },
            "src": "195:100:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "446:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 36,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "471:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EtherWallet_$103",
                            "typeString": "contract EtherWallet"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_EtherWallet_$103",
                            "typeString": "contract EtherWallet"
                          }
                        ],
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "463:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "463:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "463:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "463:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33,
                  "id": 39,
                  "nodeType": "Return",
                  "src": "456:28:0"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "421:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "421:9:0"
              }
            ],
            "name": "getBalance",
            "nameLocation": "396:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "440:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "439:6:0"
            },
            "scope": 103,
            "src": "387:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "579:7:0",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 47,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "569:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "569:9:0"
              }
            ],
            "name": "deposit",
            "nameLocation": "544:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:2:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:0:0"
            },
            "scope": 103,
            "src": "535:51:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "754:147:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 55,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "772:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 58,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "791:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EtherWallet_$103",
                                  "typeString": "contract EtherWallet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EtherWallet_$103",
                                  "typeString": "contract EtherWallet"
                                }
                              ],
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "783:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 56,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "783:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "783:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "783:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "772:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6e747261637420444f45534e54206861766520656e6f75676820657468657221",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "806:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02",
                          "typeString": "literal_string \"The contract DOESNT have enough ether!\""
                        },
                        "value": "The contract DOESNT have enough ether!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02",
                          "typeString": "literal_string \"The contract DOESNT have enough ether!\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "764:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "764:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "764:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "886:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 67,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "865:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "865:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "857:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 65,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "857:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "857:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "857:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "857:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "857:37:0"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 75,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "744:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "744:9:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "714:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "728:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "723:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "722:14:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "754:0:0"
            },
            "scope": 103,
            "src": "705:196:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1101:137:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "1119:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 88,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1138:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EtherWallet_$103",
                                  "typeString": "contract EtherWallet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EtherWallet_$103",
                                  "typeString": "contract EtherWallet"
                                }
                              ],
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1130:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1130:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1130:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1130:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1119:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6e747261637420444f45534e54206861766520656e6f75676820657468657221",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1153:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02",
                          "typeString": "literal_string \"The contract DOESNT have enough ether!\""
                        },
                        "value": "The contract DOESNT have enough ether!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02",
                          "typeString": "literal_string \"The contract DOESNT have enough ether!\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1111:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1223:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 95,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1204:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1204:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:27:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 82,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 81,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "1091:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1091:9:0"
              }
            ],
            "name": "transfer",
            "nameLocation": "1034:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "1059:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1043:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1075:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1070:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:41:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:0:0"
            },
            "scope": 103,
            "src": "1025:213:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 104,
        "src": "57:1188:0",
        "usedErrors": []
      }
    ],
    "src": "32:1575:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/tim/_Dapp_ex/ETB4_EtherWallet/src/contracts/EtherWallet.sol",
    "exportedSymbols": {
      "EtherWallet": [
        103
      ]
    },
    "id": 104,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 103,
        "linearizedBaseContracts": [
          103
        ],
        "name": "EtherWallet",
        "nameLocation": "66:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "111:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 103,
            "src": "88:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "88:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14,
              "nodeType": "Block",
              "src": "141:44:0",
              "statements": [
                {
                  "expression": {
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "151:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 9,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "167:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "167:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "159:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "159:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "159:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "151:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 13,
                  "nodeType": "ExpressionStatement",
                  "src": "151:27:0"
                }
              ]
            },
            "id": 15,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "138:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "141:0:0"
            },
            "scope": 103,
            "src": "127:58:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "213:82:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "231:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "231:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 20,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "245:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "231:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265204e4f5420746865206f776e657221",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "252:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140",
                          "typeString": "literal_string \"You are NOT the owner!\""
                        },
                        "value": "You are NOT the owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5de057cc07dcc49dc9d74308f5c65638d877d87efd59b12e6f4083f388cc5140",
                          "typeString": "literal_string \"You are NOT the owner!\""
                        }
                      ],
                      "id": 17,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "223:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "223:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "223:54:0"
                },
                {
                  "id": 25,
                  "nodeType": "PlaceholderStatement",
                  "src": "287:1:0"
                }
              ]
            },
            "id": 27,
            "name": "onlyOwner",
            "nameLocation": "204:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:0"
            },
            "src": "195:100:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "446:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 36,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "471:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EtherWallet_$103",
                            "typeString": "contract EtherWallet"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_EtherWallet_$103",
                            "typeString": "contract EtherWallet"
                          }
                        ],
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "463:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "463:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "463:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "463:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 33,
                  "id": 39,
                  "nodeType": "Return",
                  "src": "456:28:0"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "421:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "421:9:0"
              }
            ],
            "name": "getBalance",
            "nameLocation": "396:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "440:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "439:6:0"
            },
            "scope": 103,
            "src": "387:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "579:7:0",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 47,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "569:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "569:9:0"
              }
            ],
            "name": "deposit",
            "nameLocation": "544:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:2:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:0:0"
            },
            "scope": 103,
            "src": "535:51:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "754:147:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 55,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "772:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 58,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "791:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EtherWallet_$103",
                                  "typeString": "contract EtherWallet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EtherWallet_$103",
                                  "typeString": "contract EtherWallet"
                                }
                              ],
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "783:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 56,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "783:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "783:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "783:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "772:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6e747261637420444f45534e54206861766520656e6f75676820657468657221",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "806:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02",
                          "typeString": "literal_string \"The contract DOESNT have enough ether!\""
                        },
                        "value": "The contract DOESNT have enough ether!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02",
                          "typeString": "literal_string \"The contract DOESNT have enough ether!\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "764:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "764:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "764:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 71,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "886:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 67,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "865:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "865:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "857:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 65,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "857:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "857:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "857:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "857:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "857:37:0"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 75,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "744:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "744:9:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "714:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "728:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "723:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "722:14:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "754:0:0"
            },
            "scope": 103,
            "src": "705:196:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1101:137:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "1119:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 88,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1138:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EtherWallet_$103",
                                  "typeString": "contract EtherWallet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EtherWallet_$103",
                                  "typeString": "contract EtherWallet"
                                }
                              ],
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1130:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1130:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1130:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1130:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1119:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6e747261637420444f45534e54206861766520656e6f75676820657468657221",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1153:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02",
                          "typeString": "literal_string \"The contract DOESNT have enough ether!\""
                        },
                        "value": "The contract DOESNT have enough ether!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a111e3f5d33f3ddbc83fb2a10ac9245305244e6f0f7e6556ca1ec645fdf2ca02",
                          "typeString": "literal_string \"The contract DOESNT have enough ether!\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1111:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1223:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 95,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1204:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1204:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:27:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 82,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 81,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "1091:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1091:9:0"
              }
            ],
            "name": "transfer",
            "nameLocation": "1034:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "1059:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1043:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1075:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1070:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:41:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:0:0"
            },
            "scope": 103,
            "src": "1025:213:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 104,
        "src": "57:1188:0",
        "usedErrors": []
      }
    ],
    "src": "32:1575:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x089aA6aA5F1dE6285f0ACe5f262Af2cf8d111022",
      "transactionHash": "0x3765e54c5a33a12389b2484ad53c0660579862268b6422ca27998b97ea66b80d"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-20T17:53:40.511Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}